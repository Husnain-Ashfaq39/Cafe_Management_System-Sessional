name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    paths:
      - 'order-services/**'
      - 'payment-services/**'
      - 'menu-services/**'
      - 'inventory-services/**'
      - 'customer-services/**'
      - 'api-gateway/**'
      - '.github/workflows/docker-build.yml'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install ESLint
        run: |
          npm install -g eslint

      - name: Run ESLint
        run: |
          for dir in api-gateway order-services payment-services menu-services inventory-services customer-services; do
            echo "Installing dependencies in $dir"
            cd $dir && npm install && cd ..
          done

          eslint api-gateway/ order-services/ payment-services/ menu-services/ inventory-services/ customer-services/ --ext .js || true

  build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        service: [api-gateway, order-services, payment-services, menu-services, inventory-services, customer-services]
        include:
          - service: api-gateway
            port: 3000
          - service: order-services
            port: 3001
          - service: payment-services
            port: 3002
          - service: menu-services
            port: 3003
          - service: inventory-services
            port: 3004
          - service: customer-services
            port: 3005

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: 'husnain239'
          password: 'dckr_pat_cS5tYVEvPL2NPE6wQNoibFELpUs'

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: husnain239/cafe-management-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=sha,format=short
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=husnain239/cafe-management-${{ matrix.service }}:buildcache
          cache-to: type=registry,ref=husnain239/cafe-management-${{ matrix.service }}:buildcache,mode=max

  deploy:
    name: Update Docker Compose
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update docker-compose.yml
        run: |
          echo "This step would update docker-compose.yml file with new image tags" 
          echo "For actual deployment, you would add additional steps here"

      - name: Notify success
        run: |
          echo "All Docker images have been built and pushed to DockerHub"
          echo "Repository: husnain239/cafe-management-*" 